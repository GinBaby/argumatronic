maybe alternatives

i've started to think of the monoidal possibilities as not just disjunctive and conjunctive (tho they are in Boolean terms and set theory terms) but as "error-correcting" and "error-propagating". conjunctive monoids are error propagating; they fail on every case where there is an error. disjunctive monoids are error correcting; they only fail if *both* arguments are errors. The Maybe monoid in base is error correcting, like a Boolean disjunction:

the Maybe applicative, tho, is error-propagating -- it is conjunctive and fails whenever one side is a Nothing:

this isn't necessary and since monoids are what give rise to applicative functors, they should be coherent.

in fact the Maybe monoid is coherent with its *Alternative* instance:

(can you straightforwardly rewrite any Maybe applicative code to use the alternative instance instead?)

this might be more interesting compared to Either and AccValidation -- but there is no monoid in base for Either and there is no alternative instance for it either. 

AccValidation has semigroup, monoid, and Alt instances (not Alternative, but an Alternative-like Functor typeclass called Alt)

well for AccValidation you don't want an error-correcting applicative, do you? it would defeat the special purpose of AccValidation as it would no longer accumulate in the Left but would just return the Right. yep. dunno about Alt.

http://dev.stephendiehl.com/hask/#alternative